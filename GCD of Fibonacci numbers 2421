import sys
from functools import lru_cache
from math import gcd
sys.setrecursionlimit(5000)
@lru_cache(5000)
def fib(n):
    if n == 0:
        return 0
    if n == 1 or n == 2:
        return 1
    if n & 1:
        k = (n+1) // 2
    else:
        k = n // 2
    if n & 1:
        n = (fib(k) * fib(k) + fib(k-1) * fib(k-1)) % 10**8
    else:
        n = ((2 * fib(k-1) + fib(k)) * fib(k)) % 10**8
    return n

if __name__ == "__main__":
    for line in sys.stdin:
        n, m = map(int, line.split())
        print(fib(gcd(n, m)))
